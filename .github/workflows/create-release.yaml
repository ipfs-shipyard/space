name: release

on:
  push:
    tags:
      - "*"

jobs:
  start_release:
    name: build_release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create release
        uses: ncipollo/release-action@v1
        id: create_release
        with:
          draft: true
          prerelease: false
          name: ${{ github.ref_name }}
          tag: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
  build_upload_artifacts:
    needs: [ start_release ]
    name: build_upload_artifacts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [ myceli, controller, hyphae ]
        target:
          [
            armv7-unknown-linux-gnueabihf,
            aarch64-unknown-linux-gnu,
            x86_64-unknown-linux-gnu,
          ]
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - name: install cross
        run: cargo install cross --git https://github.com/cross-rs/cross
      - name: clean cargo
        run: cargo clean
      - name: cargo/cross build
        run: CROSS_CONFIG=Cross.toml cross build --bin ${{ matrix.project }} --target ${{ matrix.target }} --release --features big
      - name: Archive binary
        run: tar -czvf ${{ matrix.project }}-${{ matrix.target }}.tar.gz -C ./target/${{ matrix.target }}/release ${{ matrix.project }}
      - name: upload binary
        run: |
          mv "$SOURCE_PATH" "$TARGET_PATH"
          gh release upload "$GITHUB_REF" "$TARGET_PATH"
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SOURCE_PATH: ./${{ matrix.project }}-${{ matrix.target }}.tar.gz
          TARGET_PATH: ./${{ matrix.project }}-${{ github.ref_name }}-${{ matrix.target }}.tar.gz
        shell: bash
  small:
    needs: [ start_release ]
    name: small
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          [
            armv7-unknown-linux-gnueabihf,
            aarch64-unknown-linux-gnu,
          ]
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - name: install cross
        run: cargo install cross --git https://github.com/cross-rs/cross
      - name: clean cargo
        run: cargo clean
      - name: cargo/cross build
        run: CROSS_CONFIG=Cross.toml cross build --bin myceli --target ${{ matrix.target }} --profile small --features small --no-default-features
      - name: Compress binary
        run: |
          tar -cvf myceli-small-${{ github.ref_name }}-${{ matrix.target }}.tar -C ./target/${{ matrix.target }}/small myceli
          xz -9 --keep --extreme myceli-small-${{ github.ref_name }}-${{ matrix.target }}.tar
          gzip --best myceli-small-${{ github.ref_name }}-${{ matrix.target }}.tar
      - name: upload binary
        run: gh release upload "$GITHUB_REF" myceli-small-${{ github.ref_name }}-${{ matrix.target }}.tar.?z
        env:
          GITHUB_TOKEN: ${{ github.token }}
        shell: bash

  build_upload_docker:
    needs: [ start_release ]
    name: build_upload_docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and publish myceli docker
        run: |
          docker build -f myceli.Dockerfile . --tag ghcr.io/ipfs-shipyard/myceli:latest --tag ghcr.io/ipfs-shipyard/myceli:${{ github.ref_name }}
          docker push ghcr.io/ipfs-shipyard/myceli:latest
          docker push ghcr.io/ipfs-shipyard/myceli:${{ github.ref_name }}
