name: release

on: [pull_request]

jobs:
  build_release:
    name: build_release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: install cross
        run: cargo install cross --git https://github.com/cross-rs/cross
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: true
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: myceli raspi build
        run: CROSS_CONFIG=Cross.toml cross build --bin myceli --target armv7-unknown-linux-gnueabihf --release
      - name: upload raspbi artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/armv7-unknown-linux-gnueabihf/release/myceli
          asset_name: myceli-armv7-linux
          asset_content_type: application
      - name: cargo clean
        run: cargo clean
      - name: myceli arm64 linux build
        run: CROSS_CONFIG=Cross.toml cross build --bin myceli --target aarch64-unknown-linux-gnu --release
      - name: upload arm64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/aarch64-unknown-linux/release/myceli
          asset_name: myceli-aarch64-linux
          asset_content_type: application
      - name: cargo clean
        run: cargo clean
      - name: myceli x86 linux build
        run: CROSS_CONFIG=Cross.toml cross build --bin myceli --target x86_64-unknown-linux-gnu --release
      - name: upload x84 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/x86_64-unknown-linux-gnu/release/myceli
          asset_name: myceli-x86-linux
          asset_content_type: application
